{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/scripts/constants/formFields.js","src/scripts/constants/countries.js"],"sourcesContent":["const $de0ed4da0f9f4908$export$e5ad74579c86b003 = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\n\n\nconst $b17cc410932736ff$export$4977f55466ea2c64 = [\n    {\n        label: \"Name\",\n        name: \"name\",\n        type: \"text\"\n    },\n    {\n        label: \"Position\",\n        name: \"position\",\n        type: \"text\"\n    },\n    {\n        label: \"Country\",\n        name: \"office\",\n        type: \"select\",\n        options: (0, $de0ed4da0f9f4908$export$e5ad74579c86b003)\n    },\n    {\n        label: \"Age\",\n        name: \"age\",\n        type: \"number\"\n    },\n    {\n        label: \"Salary\",\n        name: \"salary\",\n        type: \"number\"\n    }\n];\n\n\n\"use strict\";\nlet $09e991522ca7e64e$var$selectedColumn = null;\nlet $09e991522ca7e64e$var$sortOrder = \"asc\";\nconst $09e991522ca7e64e$var$regExp = /^[a-zA-Z\\s]+$/;\nconst $09e991522ca7e64e$var$table = document.querySelector(\"table\");\nconst $09e991522ca7e64e$var$tHead = document.querySelector(\"thead\");\nconst $09e991522ca7e64e$var$tBody = document.querySelector(\"tbody\");\nconst $09e991522ca7e64e$var$rows = [\n    ...$09e991522ca7e64e$var$tBody.querySelectorAll(\"tr\")\n];\nconst $09e991522ca7e64e$var$selectRow = (row)=>{\n    $09e991522ca7e64e$var$rows.forEach((rowItem)=>{\n        rowItem.classList.remove(\"active\");\n    });\n    row.classList.add(\"active\");\n};\n$09e991522ca7e64e$var$rows.forEach((row)=>{\n    row.addEventListener(\"click\", ()=>{\n        $09e991522ca7e64e$var$selectRow(row);\n    });\n});\n$09e991522ca7e64e$var$tHead.addEventListener(\"click\", (e)=>{\n    const index = e.target.cellIndex;\n    if (index === $09e991522ca7e64e$var$selectedColumn) $09e991522ca7e64e$var$sortOrder = $09e991522ca7e64e$var$sortOrder === \"asc\" ? \"desc\" : \"asc\";\n    else {\n        $09e991522ca7e64e$var$selectedColumn = index;\n        $09e991522ca7e64e$var$sortOrder = \"asc;\";\n    }\n    const rowTable = [\n        ...$09e991522ca7e64e$var$tBody.querySelectorAll(\"tr\")\n    ];\n    const sortedRows = rowTable.sort((rowA, rowB)=>{\n        const cellsA = rowA.cells[index].innerText;\n        const cellsB = rowB.cells[index].innerText;\n        switch(index){\n            case 0:\n            case 1:\n            case 2:\n                return cellsA.localeCompare(cellsB);\n            case 3:\n                return Number(cellsA) - Number(cellsB);\n            case 4:\n                return parseFloat(cellsA.slice(1)) - parseFloat(cellsB.slice(1));\n        }\n    });\n    if ($09e991522ca7e64e$var$sortOrder === \"desc\") sortedRows.reverse();\n    $09e991522ca7e64e$var$tBody.append(...sortedRows);\n});\nconst $09e991522ca7e64e$var$form = document.createElement(\"form\");\n$09e991522ca7e64e$var$form.classList.add(\"new-employee-form\");\ndocument.body.append($09e991522ca7e64e$var$form);\n(0, $b17cc410932736ff$export$4977f55466ea2c64).forEach(({ label: label, name: fName, type: type, options: options })=>{\n    const field = document.createElement(\"label\");\n    field.innerHTML = `${label}: ${type === \"select\" ? `<select name=\"${fName}\" data-qa=\"${fName}\">\n        ${options.map((option)=>`<option value=\"${option}\">${option}</option>`).join(\"\")}\n      </select>` : `<input name=\"${fName}\" data-qa=\"${fName}\" type=\"${type}\">`}`;\n    $09e991522ca7e64e$var$form.append(field);\n});\nconst $09e991522ca7e64e$var$button = document.createElement(\"button\");\n$09e991522ca7e64e$var$button.textContent = \"Save to table\";\n$09e991522ca7e64e$var$form.append($09e991522ca7e64e$var$button);\nconst $09e991522ca7e64e$var$createMessage = (text, className)=>{\n    const message = document.createElement(\"div\");\n    message.setAttribute(\"data-qa\", \"notification\");\n    message.classList = `notification ${className}`;\n    message.innerText = text;\n    return message;\n};\n$09e991522ca7e64e$var$form.addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    const data = new FormData($09e991522ca7e64e$var$form);\n    const position = data.get(\"position\").trim();\n    const salary = data.get(\"salary\").trim();\n    const office = data.get(\"office\").trim();\n    const fName = data.get(\"name\").trim();\n    const age = data.get(\"age\").trim();\n    const isValidField = (str)=>$09e991522ca7e64e$var$regExp.test(str);\n    const message = [\n        {\n            condition: fName.length < 4,\n            text: \"Name value has less than 4 letters\"\n        },\n        {\n            condition: !isValidField(fName) || !isValidField(position),\n            text: \"Name and Position must contain only Latin letters and spaces.\"\n        },\n        {\n            condition: !position.length,\n            text: \"Position field cannot be empty\"\n        },\n        {\n            condition: +age < 18 || +age > 90,\n            text: \"Age value is less than 18 or more than 90\"\n        },\n        {\n            condition: +salary <= 0,\n            text: \"Add salary\"\n        }\n    ];\n    for (const { condition: condition, text: text } of message)if (condition) {\n        document.body.append($09e991522ca7e64e$var$createMessage(text, \"error\"));\n        return;\n    }\n    const newPerson = [\n        fName,\n        position,\n        office,\n        age,\n        `$${(+(salary / 1000)).toFixed(3).replace(\".\", \",\")}`\n    ];\n    const newRow = $09e991522ca7e64e$var$tBody.insertRow(-1);\n    newPerson.forEach((item, index)=>{\n        const cell = newRow.insertCell(index);\n        cell.innerText = item;\n    });\n    document.body.append($09e991522ca7e64e$var$createMessage(\"Employee successfully added\", \"success\"));\n    $09e991522ca7e64e$var$form.reset();\n    setTimeout(()=>{\n        document.querySelectorAll(\".notification\").forEach((notification)=>{\n            notification.remove();\n        });\n    }, 3000);\n});\nlet $09e991522ca7e64e$var$editedCell = null;\n$09e991522ca7e64e$var$table.addEventListener(\"dblclick\", (e)=>{\n    const cell = e.target.closest(\"td\");\n    if (!cell) return;\n    $09e991522ca7e64e$var$editedCell = cell.textContent;\n    cell.innerHTML = `<input class=\"cell-input\" value=\"${$09e991522ca7e64e$var$editedCell}\">`;\n    cell.querySelector(\".cell-input\").focus();\n});\n$09e991522ca7e64e$var$table.addEventListener(\"blur\", (e)=>{\n    const input = e.target;\n    if (!input.classList.contains(\"cell-input\")) return;\n    const cell = input.closest(\"td\");\n    cell.innerText = input.value().trim() || $09e991522ca7e64e$var$editedCell;\n    $09e991522ca7e64e$var$editedCell = null;\n}, true);\n$09e991522ca7e64e$var$table.addEventListener(\"keypress\", (e)=>{\n    const input = e.target;\n    if (e.key !== \"Enter\" && !input.classList.contains(\"cell-input\")) return;\n    const newText = input.value().trim();\n    if (!$09e991522ca7e64e$var$regExp.test(newText)) {\n        alert(\"Use only Latin letters and spaces.\");\n        e.preventDefault();\n        return;\n    }\n    const cell = input.closest(\"td\");\n    cell.innerText = newText || $09e991522ca7e64e$var$editedCell;\n    $09e991522ca7e64e$var$editedCell = null;\n});\n\n\n//# sourceMappingURL=index.e4760e9d.js.map\n","'use strict';\n\nimport { formFields } from './constants/formFields';\n\nlet selectedColumn = null;\nlet sortOrder = 'asc';\nconst regExp = /^[a-zA-Z\\s]+$/;\n\nconst table = document.querySelector('table');\nconst tHead = document.querySelector('thead');\nconst tBody = document.querySelector('tbody');\n\nconst rows = [...tBody.querySelectorAll('tr')];\n\nconst selectRow = (row) => {\n  rows.forEach((rowItem) => {\n    rowItem.classList.remove('active');\n  });\n\n  row.classList.add('active');\n};\n\nrows.forEach((row) => {\n  row.addEventListener('click', () => {\n    selectRow(row);\n  });\n});\n\ntHead.addEventListener('click', (e) => {\n  const index = e.target.cellIndex;\n\n  if (index === selectedColumn) {\n    sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';\n  } else {\n    selectedColumn = index;\n    sortOrder = 'asc;';\n  }\n\n  const rowTable = [...tBody.querySelectorAll('tr')];\n\n  const sortedRows = rowTable.sort((rowA, rowB) => {\n    const cellsA = rowA.cells[index].innerText;\n    const cellsB = rowB.cells[index].innerText;\n\n    switch (index) {\n      case 0:\n      case 1:\n      case 2:\n        return cellsA.localeCompare(cellsB);\n\n      case 3:\n        return Number(cellsA) - Number(cellsB);\n\n      case 4:\n        return parseFloat(cellsA.slice(1)) - parseFloat(cellsB.slice(1));\n    }\n  });\n\n  if (sortOrder === 'desc') {\n    sortedRows.reverse();\n  }\n\n  tBody.append(...sortedRows);\n});\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\ndocument.body.append(form);\n\nformFields.forEach(({ label, name: fName, type, options }) => {\n  const field = document.createElement('label');\n\n  field.innerHTML = `${label}: ${\n    type === 'select'\n      ? `<select name=\"${fName}\" data-qa=\"${fName}\">\n        ${options.map((option) => `<option value=\"${option}\">${option}</option>`).join('')}\n      </select>`\n      : `<input name=\"${fName}\" data-qa=\"${fName}\" type=\"${type}\">`\n  }`;\n\n  form.append(field);\n});\n\nconst button = document.createElement('button');\n\nbutton.textContent = 'Save to table';\nform.append(button);\n\nconst createMessage = (text, className) => {\n  const message = document.createElement('div');\n\n  message.setAttribute('data-qa', 'notification');\n  message.classList = `notification ${className}`;\n  message.innerText = text;\n\n  return message;\n};\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n\n  const position = data.get('position').trim();\n  const salary = data.get('salary').trim();\n  const office = data.get('office').trim();\n  const fName = data.get('name').trim();\n  const age = data.get('age').trim();\n\n  const isValidField = (str) => regExp.test(str);\n\n  const message = [\n    { condition: fName.length < 4, text: 'Name value has less than 4 letters' },\n    {\n      condition: !isValidField(fName) || !isValidField(position),\n      text: 'Name and Position must contain only Latin letters and spaces.',\n    },\n    { condition: !position.length, text: 'Position field cannot be empty' },\n    {\n      condition: +age < 18 || +age > 90,\n      text: 'Age value is less than 18 or more than 90',\n    },\n    { condition: +salary <= 0, text: 'Add salary' },\n  ];\n\n  for (const { condition, text } of message) {\n    if (condition) {\n      document.body.append(createMessage(text, 'error'));\n\n      return;\n    }\n  }\n\n  const newPerson = [\n    fName,\n    position,\n    office,\n    age,\n    `$${(+(salary / 1000)).toFixed(3).replace('.', ',')}`,\n  ];\n\n  const newRow = tBody.insertRow(-1);\n\n  newPerson.forEach((item, index) => {\n    const cell = newRow.insertCell(index);\n\n    cell.innerText = item;\n  });\n\n  document.body.append(createMessage('Employee successfully added', 'success'));\n  form.reset();\n\n  setTimeout(() => {\n    document.querySelectorAll('.notification').forEach((notification) => {\n      notification.remove();\n    });\n  }, 3000);\n});\n\nlet editedCell = null;\n\ntable.addEventListener('dblclick', (e) => {\n  const cell = e.target.closest('td');\n\n  if (!cell) {\n    return;\n  }\n\n  editedCell = cell.textContent;\n  cell.innerHTML = `<input class=\"cell-input\" value=\"${editedCell}\">`;\n  cell.querySelector('.cell-input').focus();\n});\n\ntable.addEventListener(\n  'blur',\n  (e) => {\n    const input = e.target;\n\n    if (!input.classList.contains('cell-input')) {\n      return;\n    }\n\n    const cell = input.closest('td');\n\n    cell.innerText = input.value().trim() || editedCell;\n    editedCell = null;\n  },\n  true,\n);\n\ntable.addEventListener('keypress', (e) => {\n  const input = e.target;\n\n  if (e.key !== 'Enter' && !input.classList.contains('cell-input')) {\n    return;\n  }\n\n  const newText = input.value().trim();\n\n  if (!regExp.test(newText)) {\n    alert('Use only Latin letters and spaces.');\n    e.preventDefault();\n\n    return;\n  }\n\n  const cell = input.closest('td');\n\n  cell.innerText = newText || editedCell;\n  editedCell = null;\n});\n","import { countries } from './countries';\n\nexport const formFields = [\n  { label: 'Name', name: 'name', type: 'text' },\n  { label: 'Position', name: 'position', type: 'text' },\n  {\n    label: 'Country',\n    name: 'office',\n    type: 'select',\n    options: countries,\n  },\n  { label: 'Age', name: 'age', type: 'number' },\n  { label: 'Salary', name: 'salary', type: 'number' },\n];\n","export const countries = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n"],"names":["$09e991522ca7e64e$var$selectedColumn","$09e991522ca7e64e$var$sortOrder","$09e991522ca7e64e$var$regExp","$09e991522ca7e64e$var$table","document","querySelector","$09e991522ca7e64e$var$tHead","$09e991522ca7e64e$var$tBody","$09e991522ca7e64e$var$rows","querySelectorAll","$09e991522ca7e64e$var$selectRow","row","forEach","rowItem","classList","remove","add","addEventListener","e","index","target","cellIndex","sortedRows","rowTable","sort","rowA","rowB","cellsA","cells","innerText","cellsB","localeCompare","Number","parseFloat","slice","reverse","append","$09e991522ca7e64e$var$form","createElement","body","label","name","type","options","fName","field","innerHTML","map","option","join","$09e991522ca7e64e$var$button","textContent","$09e991522ca7e64e$var$createMessage","text","className","message","setAttribute","preventDefault","data","FormData","position","get","trim","salary","office","age","isValidField","str","test","condition","length","newPerson","toFixed","replace","newRow","insertRow","item","cell","insertCell","reset","setTimeout","notification","$09e991522ca7e64e$var$editedCell","closest","focus","input","contains","value","key","newText","alert"],"version":3,"file":"index.e4760e9d.js.map"}